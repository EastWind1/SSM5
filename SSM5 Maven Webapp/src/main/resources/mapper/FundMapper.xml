<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.dao.FundMapper">
    <resultMap id="BaseResultMap" type="test.entity.Fund">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="unit" jdbcType="VARCHAR" property="unit"/>
        <result column="currency" jdbcType="VARCHAR" property="currency"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="pid" jdbcType="VARCHAR" property="pid"/>
        <collection property="children" column="id" select="test.dao.FundMapper.selectByParentId"></collection>
    </resultMap>
    <sql id="Base_Column_List">
		id, name, unit, currency, state, pid
	</sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from fund
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="list" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from fund where pid is null
    </select>
    <select id="selectByParentId" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from fund
        where pid = #{pid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from fund
		where id = #{id,jdbcType=VARCHAR}
	</delete>
    <insert id="insert" parameterType="test.entity.Fund">
		insert into fund (id, name,
		unit,
		currency, state, pid
		)
		values (#{id,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{unit,jdbcType=VARCHAR},
		#{currency,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR},
		#{pid,jdbcType=VARCHAR}
		)
	</insert>
    <insert id="insertSelective" parameterType="test.entity.Fund">
        insert into fund
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="unit != null">
                unit,
            </if>
            <if test="currency != null">
                currency,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="pid != null">
                pid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                #{unit,jdbcType=VARCHAR},
            </if>
            <if test="currency != null">
                #{currency,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="test.entity.Fund">
        update fund
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="currency != null">
                currency = #{currency,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="test.entity.Fund">
		update fund
		set
		name = #{name,jdbcType=VARCHAR},
		unit = #{unit,jdbcType=VARCHAR},
		currency = #{currency,jdbcType=VARCHAR},
		state =
		#{state,jdbcType=VARCHAR},
		pid = #{pid,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=VARCHAR}
	</update>
</mapper>