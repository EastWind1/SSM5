<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.dao.AccountMapper">
  <resultMap id="BaseResultMap" type="test.entity.Account">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="way" jdbcType="INTEGER" property="way" />
    <result column="number" jdbcType="DECIMAL" property="number" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, way, number, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAccounts" resultMap="BaseResultMap">
  <!-- mybatis会自动判断是否是单个还是集合，会自动转换，因此无需指定为list。此处可使用自定义的返回映射map，也可为指定的实体。 -->
  	select
  	<include refid="Base_Column_List" />
  	from account
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="test.entity.Account" useGeneratedKeys="true" keyProperty="id">
    insert into account (id, name, way, 
      number,state)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{way,jdbcType=INTEGER}, 
      #{number,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="test.entity.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="way != null">
        way,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="way != null">
        #{way,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="test.entity.Account">
    update account
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="way != null">
        way = #{way,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.entity.Account">
    update account
    set name = #{name,jdbcType=VARCHAR},
      way = #{way,jdbcType=INTEGER},
      number = #{number,jdbcType=DECIMAL}
      state = #{state,jdbcType=INTEGER},
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>